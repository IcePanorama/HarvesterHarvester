<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_extractor_8c" xml:lang="en-US">
<title>src/extractor.c File Reference</title>
<indexterm><primary>src/extractor.c</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;extractor.h&quot;<?linebreak?>#include &quot;data_reader.h&quot;<?linebreak?>#include &quot;options.h&quot;<?linebreak?>#include &quot;output.h&quot;<?linebreak?>#include &quot;utils.h&quot;<?linebreak?>#include &lt;string.h&gt;<?linebreak?></programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int8_t <link linkend="_extractor_8c_1a6c570aa556812918f6d97359199ef25a">extract_file</link> (FILE *fptr, <link linkend="_structdirectory__record">directory_record</link> *dr, const char *path)</para>

<para>Extracts a file pointed to by <computeroutput>fptr</computeroutput> using its respective <computeroutput><link linkend="_structdirectory__record">directory_record</link></computeroutput>, outputting it to the location pointed to by <computeroutput>path</computeroutput>. </para>
</listitem>
            <listitem><para>int8_t <link linkend="_extractor_8c_1a83bd0d1558bff60ba2a613868c6a138f">extract_directory</link> (FILE *fptr, const uint16_t BLOCK_SIZE, const char *path)</para>

<para>Creates a directory and then extracts every file in said directory. </para>
</listitem>
            <listitem><para>void <link linkend="_extractor_8c_1ac9ebc1f302a1c1bc185bc8f1e45b1ffb">create_directories_and_extract_data_from_path_file</link> (FILE *fptr, uint16_t BLOCK_SIZE, <link linkend="_structpath__table">path_table</link> *pt)</para>

<para>A wrapper for <computeroutput>extract_directory</computeroutput> and, therefore also, <computeroutput>extract_file</computeroutput> which handles the extraction of every file and subdirectory using a given path table. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_extractor_8c_1ac9ebc1f302a1c1bc185bc8f1e45b1ffb"/><section>
    <title>create_directories_and_extract_data_from_path_file()</title>
<indexterm><primary>create_directories_and_extract_data_from_path_file</primary><secondary>extractor.c</secondary></indexterm>
<indexterm><primary>extractor.c</primary><secondary>create_directories_and_extract_data_from_path_file</secondary></indexterm>
<para><computeroutput>void create_directories_and_extract_data_from_path_file (FILE * fptr, uint16_t BLOCK_SIZE, struct <link linkend="_structpath__table">path_table</link> * pt)</computeroutput></para><para>

<para>A wrapper for <computeroutput>extract_directory</computeroutput> and, therefore also, <computeroutput>extract_file</computeroutput> which handles the extraction of every file and subdirectory using a given path table. </para>
</para>

<para>Creates directories for every directory in a given path table and then extracts all of its files.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>fptr</entry><entry>
<para>pointer to the data </para>
</entry>
                            </row>
                            <row>
<entry>BLOCK_SIZE</entry><entry>
<para>logical block size in big endian form, needed for fseek </para>
</entry>
                            </row>
                            <row>
<entry>path</entry><entry>
<para>a string of the path to output to. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>zero on success, non-zero on failure. </para>
</formalpara>
<formalpara><title>See also</title>

<para><link linkend="_extractor_8h_1a83bd0d1558bff60ba2a613868c6a138f">extract_directory()</link> </para>

<para><link linkend="_extractor_8h_1a553117edee61f114d5f6fd9d28d57313">extract_file()</link> </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_extractor_8c_source_1l00107">107</link> of file <link linkend="_extractor_8c_source">extractor.c</link>.</para>
</section>
<anchor xml:id="_extractor_8c_1a83bd0d1558bff60ba2a613868c6a138f"/><section>
    <title>extract_directory()</title>
<indexterm><primary>extract_directory</primary><secondary>extractor.c</secondary></indexterm>
<indexterm><primary>extractor.c</primary><secondary>extract_directory</secondary></indexterm>
<para><computeroutput>int8_t extract_directory (FILE * fptr, const uint16_t BLOCK_SIZE, const char * path)</computeroutput></para><para>

<para>Creates a directory and then extracts every file in said directory. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>fptr</entry><entry>
<para>pointer to the data of the directory. </para>
</entry>
                            </row>
                            <row>
<entry>BLOCK_SIZE</entry><entry>
<para>logical block size in big endian form, needed for fseek </para>
</entry>
                            </row>
                            <row>
<entry>path</entry><entry>
<para>a string of the path to output to. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>zero on success, non-zero on failure. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_extractor_8c_source_1l00067">67</link> of file <link linkend="_extractor_8c_source">extractor.c</link>.</para>
</section>
<anchor xml:id="_extractor_8c_1a6c570aa556812918f6d97359199ef25a"/><section>
    <title>extract_file()</title>
<indexterm><primary>extract_file</primary><secondary>extractor.c</secondary></indexterm>
<indexterm><primary>extractor.c</primary><secondary>extract_file</secondary></indexterm>
<para><computeroutput>int8_t extract_file (FILE * fptr, struct <link linkend="_structdirectory__record">directory_record</link> * dr, const char * path)</computeroutput></para><para>

<para>Extracts a file pointed to by <computeroutput>fptr</computeroutput> using its respective <computeroutput><link linkend="_structdirectory__record">directory_record</link></computeroutput>, outputting it to the location pointed to by <computeroutput>path</computeroutput>. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>fptr</entry><entry>
<para>pointer to data of the file. </para>
</entry>
                            </row>
                            <row>
<entry>dr</entry><entry>
<para>the directory record corresponding to that file. </para>
</entry>
                            </row>
                            <row>
<entry>path</entry><entry>
<para>a string of the file&apos;s output path. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>zero on success, non-zero on failure. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_extractor_8c_source_1l00010">10</link> of file <link linkend="_extractor_8c_source">extractor.c</link>.</para>
</section>
</section>
</section>
