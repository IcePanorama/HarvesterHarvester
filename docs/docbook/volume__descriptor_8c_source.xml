<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_volume__descriptor_8c_source" xml:lang="en-US">
<title>volume_descriptor.c</title>
<indexterm><primary>src/volume_descriptor.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_volume__descriptor_8c_source_1l00001"/>00001 <emphasis role="comment">//&#32;&#32;Copyright&#32;(C)&#32;2024&#32;&#32;IcePanorama</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00002"/>00002 <emphasis role="comment">//&#32;&#32;This&#32;file&#32;is&#32;a&#32;part&#32;of&#32;HarvesterHarvester.</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00003"/>00003 <emphasis role="comment">//&#32;&#32;HarvesterHarvester&#32;is&#32;free&#32;software:&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00004"/>00004 <emphasis role="comment">//&#32;&#32;it&#32;under&#32;the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00005"/>00005 <emphasis role="comment">//&#32;&#32;Free&#32;Software&#32;Foundation,&#32;either&#32;version&#32;3&#32;of&#32;the&#32;License,&#32;or&#32;(at&#32;your</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00006"/>00006 <emphasis role="comment">//&#32;&#32;option)&#32;any&#32;later&#32;version.</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00007"/>00007 <emphasis role="comment">//&#32;&#32;This&#32;program&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but&#32;WITHOUT</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00008"/>00008 <emphasis role="comment">//&#32;&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of&#32;MERCHANTABILITY&#32;or</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00009"/>00009 <emphasis role="comment">//&#32;&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;for</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00010"/>00010 <emphasis role="comment">//&#32;&#32;more&#32;details.</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00011"/>00011 <emphasis role="comment">//</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00012"/>00012 <emphasis role="comment">//&#32;&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;along</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00013"/>00013 <emphasis role="comment">//&#32;&#32;with&#32;this&#32;program.&#32;&#32;If&#32;not,&#32;see&#32;&lt;https://www.gnu.org/licenses/&gt;.</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00014"/>00014 <emphasis role="preprocessor">#include&#32;&quot;volume_descriptor.h&quot;</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00015"/>00015 <emphasis role="preprocessor">#include&#32;&quot;data_reader.h&quot;</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00016"/>00016 <emphasis role="preprocessor">#include&#32;&quot;errors.h&quot;</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00017"/>00017 
<anchor xml:id="_volume__descriptor_8c_source_1l00018"/>00018 <emphasis role="preprocessor">#include&#32;&lt;stdint.h&gt;</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00019"/>00019 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00020"/>00020 
<anchor xml:id="_volume__descriptor_8c_source_1l00021"/>00021 <emphasis role="keywordtype">void</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00022"/><link linkend="_volume__descriptor_8c_1ac681bcadb940c039ad4b7093f33bb952">00022</link> <link linkend="_volume__descriptor_8c_1ac681bcadb940c039ad4b7093f33bb952">create_volume_descriptor</link>&#32;(volume_descriptor&#32;*vd,&#32;uint8_t&#32;type_code,
<anchor xml:id="_volume__descriptor_8c_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;version)
<anchor xml:id="_volume__descriptor_8c_source_1l00024"/>00024 {
<anchor xml:id="_volume__descriptor_8c_source_1l00025"/>00025 &#32;&#32;vd-&gt;type_code&#32;=&#32;type_code;
<anchor xml:id="_volume__descriptor_8c_source_1l00026"/>00026 &#32;&#32;strncpy&#32;(vd-&gt;identifier,&#32;<emphasis role="stringliteral">&quot;CD001&quot;</emphasis>,&#32;sizeof&#32;(vd-&gt;identifier));
<anchor xml:id="_volume__descriptor_8c_source_1l00027"/>00027 &#32;&#32;vd-&gt;identifier[<emphasis role="keyword">sizeof</emphasis>&#32;(vd-&gt;identifier)&#32;-&#32;1]&#32;=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>;
<anchor xml:id="_volume__descriptor_8c_source_1l00028"/>00028 &#32;&#32;vd-&gt;version&#32;=&#32;version;
<anchor xml:id="_volume__descriptor_8c_source_1l00029"/>00029 }
<anchor xml:id="_volume__descriptor_8c_source_1l00030"/>00030 
<anchor xml:id="_volume__descriptor_8c_source_1l00031"/>00031 <emphasis role="keywordtype">void</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00032"/><link linkend="_volume__descriptor_8c_1ac83303eab8ff516e07c13652ff4adece">00032</link> <link linkend="_volume__descriptor_8c_1ac83303eab8ff516e07c13652ff4adece">print_volume_descriptor_header</link>&#32;(volume_descriptor&#32;*vd)
<anchor xml:id="_volume__descriptor_8c_source_1l00033"/>00033 {
<anchor xml:id="_volume__descriptor_8c_source_1l00034"/>00034 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Volume&#32;descriptor&#32;type&#32;code:&#32;%02x\n&quot;</emphasis>,&#32;vd-&gt;type_code);
<anchor xml:id="_volume__descriptor_8c_source_1l00035"/>00035 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Volume&#32;descriptor&#32;identifier:&#32;%s\n&quot;</emphasis>,&#32;vd-&gt;identifier);
<anchor xml:id="_volume__descriptor_8c_source_1l00036"/>00036 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Volume&#32;descriptor&#32;version:&#32;%02x\n&quot;</emphasis>,&#32;vd-&gt;version);
<anchor xml:id="_volume__descriptor_8c_source_1l00037"/>00037 }
<anchor xml:id="_volume__descriptor_8c_source_1l00038"/>00038 
<anchor xml:id="_volume__descriptor_8c_source_1l00039"/>00039 <emphasis role="keywordtype">void</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00040"/><link linkend="_volume__descriptor_8c_1ae25c2f5ac41962af3d8db01bdacbb65d">00040</link> <link linkend="_volume__descriptor_8c_1ae25c2f5ac41962af3d8db01bdacbb65d">print_volume_descriptor_data</link>&#32;(volume_descriptor_data&#32;*vdd)
<anchor xml:id="_volume__descriptor_8c_source_1l00041"/>00041 {
<anchor xml:id="_volume__descriptor_8c_source_1l00042"/>00042 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;System&#32;identifier:&#32;%s\n&quot;</emphasis>,&#32;vdd-&gt;system_identifier);
<anchor xml:id="_volume__descriptor_8c_source_1l00043"/>00043 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Volume&#32;identifier:&#32;%s\n&quot;</emphasis>,&#32;vdd-&gt;volume_identifier);
<anchor xml:id="_volume__descriptor_8c_source_1l00044"/>00044 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Vol&#32;space&#32;size:&#32;%08X\n&quot;</emphasis>,&#32;vdd-&gt;volume_space_size);
<anchor xml:id="_volume__descriptor_8c_source_1l00045"/>00045 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Vol&#32;set&#32;size:&#32;%04X\n&quot;</emphasis>,&#32;vdd-&gt;volume_set_size);
<anchor xml:id="_volume__descriptor_8c_source_1l00046"/>00046 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Vol&#32;sequence&#32;size:&#32;%04X\n&quot;</emphasis>,&#32;vdd-&gt;volume_sequence_number);
<anchor xml:id="_volume__descriptor_8c_source_1l00047"/>00047 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Logical&#32;block&#32;size:&#32;%04X\n&quot;</emphasis>,&#32;vdd-&gt;logical_block_size);
<anchor xml:id="_volume__descriptor_8c_source_1l00048"/>00048 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Path&#32;table&#32;size:&#32;%08X\n&quot;</emphasis>,&#32;vdd-&gt;path_table_size);
<anchor xml:id="_volume__descriptor_8c_source_1l00049"/>00049 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Type-L&#32;path&#32;table&#32;location:&#32;%08X\n&quot;</emphasis>,
<anchor xml:id="_volume__descriptor_8c_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vdd-&gt;type_l_path_table_location);
<anchor xml:id="_volume__descriptor_8c_source_1l00051"/>00051 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Optional&#32;Type-L&#32;path&#32;table&#32;location:&#32;%08X\n&quot;</emphasis>,
<anchor xml:id="_volume__descriptor_8c_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vdd-&gt;optional_type_l_path_table_location);
<anchor xml:id="_volume__descriptor_8c_source_1l00053"/>00053 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Type-M&#32;path&#32;table&#32;location:&#32;%08X\n&quot;</emphasis>,
<anchor xml:id="_volume__descriptor_8c_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vdd-&gt;type_m_path_table_location);
<anchor xml:id="_volume__descriptor_8c_source_1l00055"/>00055 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Optional&#32;Type-M&#32;path&#32;table&#32;location:&#32;%08X\n&quot;</emphasis>,
<anchor xml:id="_volume__descriptor_8c_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vdd-&gt;optional_type_m_path_table_location);
<anchor xml:id="_volume__descriptor_8c_source_1l00057"/>00057 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Volume&#32;set&#32;identifier:&#32;%s\n&quot;</emphasis>,&#32;vdd-&gt;volume_set_identifier);
<anchor xml:id="_volume__descriptor_8c_source_1l00058"/>00058 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Publisher&#32;identifier:&#32;%s\n&quot;</emphasis>,&#32;vdd-&gt;publisher_identifier);
<anchor xml:id="_volume__descriptor_8c_source_1l00059"/>00059 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Data&#32;preparer&#32;identifier:&#32;%s\n&quot;</emphasis>,&#32;vdd-&gt;data_preparer_identifier);
<anchor xml:id="_volume__descriptor_8c_source_1l00060"/>00060 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Application&#32;identifier:&#32;%s\n&quot;</emphasis>,&#32;vdd-&gt;application_identifier);
<anchor xml:id="_volume__descriptor_8c_source_1l00061"/>00061 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Copyright&#32;file&#32;identifier:&#32;%s\n&quot;</emphasis>,&#32;vdd-&gt;copyright_file_identifier);
<anchor xml:id="_volume__descriptor_8c_source_1l00062"/>00062 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Abstract&#32;file&#32;identifier:&#32;%s\n&quot;</emphasis>,&#32;vdd-&gt;abstract_file_identifier);
<anchor xml:id="_volume__descriptor_8c_source_1l00063"/>00063 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Bibliographic&#32;file&#32;identifier:&#32;%s\n&quot;</emphasis>,
<anchor xml:id="_volume__descriptor_8c_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vdd-&gt;bibliographic_file_identifier);
<anchor xml:id="_volume__descriptor_8c_source_1l00065"/>00065 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Volume&#32;creation&#32;date&#32;and&#32;time:&#32;&quot;</emphasis>);
<anchor xml:id="_volume__descriptor_8c_source_1l00066"/>00066 &#32;&#32;<link linkend="_datetime_8c_1a6e26118490d8999d5e73b1e3e7dd83ce">print_dec_datetime</link>&#32;(vdd-&gt;volume_creation_date_and_time);
<anchor xml:id="_volume__descriptor_8c_source_1l00067"/>00067 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Volume&#32;modification&#32;date&#32;and&#32;time:&#32;&quot;</emphasis>);
<anchor xml:id="_volume__descriptor_8c_source_1l00068"/>00068 &#32;&#32;<link linkend="_datetime_8c_1a6e26118490d8999d5e73b1e3e7dd83ce">print_dec_datetime</link>&#32;(vdd-&gt;volume_modification_date_and_time);
<anchor xml:id="_volume__descriptor_8c_source_1l00069"/>00069 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Volume&#32;expiration&#32;date&#32;and&#32;time:&#32;&quot;</emphasis>);
<anchor xml:id="_volume__descriptor_8c_source_1l00070"/>00070 &#32;&#32;<link linkend="_datetime_8c_1a6e26118490d8999d5e73b1e3e7dd83ce">print_dec_datetime</link>&#32;(vdd-&gt;volume_expiration_date_and_time);
<anchor xml:id="_volume__descriptor_8c_source_1l00071"/>00071 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;Volume&#32;effective&#32;date&#32;and&#32;time:&#32;&quot;</emphasis>);
<anchor xml:id="_volume__descriptor_8c_source_1l00072"/>00072 &#32;&#32;<link linkend="_datetime_8c_1a6e26118490d8999d5e73b1e3e7dd83ce">print_dec_datetime</link>&#32;(vdd-&gt;volume_effective_date_and_time);
<anchor xml:id="_volume__descriptor_8c_source_1l00073"/>00073 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;File&#32;structure&#32;version:&#32;%02X\n&quot;</emphasis>,&#32;vdd-&gt;file_structure_version);
<anchor xml:id="_volume__descriptor_8c_source_1l00074"/>00074 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;DAT&#32;file&#32;creation&#32;software&#32;identifier:&#32;%s\n&quot;</emphasis>,
<anchor xml:id="_volume__descriptor_8c_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vdd-&gt;DAT_file_creation_software_identifier);
<anchor xml:id="_volume__descriptor_8c_source_1l00076"/>00076 &#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;DAT&#32;file&#32;creation&#32;software&#32;version&#32;number:&#32;%s\n&quot;</emphasis>,
<anchor xml:id="_volume__descriptor_8c_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vdd-&gt;DAT_file_creation_software_version_number);
<anchor xml:id="_volume__descriptor_8c_source_1l00078"/>00078 }
<anchor xml:id="_volume__descriptor_8c_source_1l00079"/>00079 
<anchor xml:id="_volume__descriptor_8c_source_1l00080"/>00080 int8_t
<anchor xml:id="_volume__descriptor_8c_source_1l00081"/><link linkend="_volume__descriptor_8c_1ab0bb4ee4fd340fd1a57cf8e1112c66b5">00081</link> <link linkend="_volume__descriptor_8c_1ab0bb4ee4fd340fd1a57cf8e1112c66b5">process_volume_descriptor_header</link>&#32;(FILE&#32;*fptr,&#32;volume_descriptor&#32;*vd)
<anchor xml:id="_volume__descriptor_8c_source_1l00082"/>00082 {
<anchor xml:id="_volume__descriptor_8c_source_1l00083"/>00083 &#32;&#32;uint8_t&#32;descriptor_type;
<anchor xml:id="_volume__descriptor_8c_source_1l00084"/>00084 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_data__reader_8c_1a3987a7d12b6ef51327e5d1ae63d087cc">read_single_uint8</link>&#32;(fptr,&#32;&amp;descriptor_type)&#32;!=&#32;0)
<anchor xml:id="_volume__descriptor_8c_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;HH_FREAD_ERROR;
<anchor xml:id="_volume__descriptor_8c_source_1l00086"/>00086 
<anchor xml:id="_volume__descriptor_8c_source_1l00087"/>00087 &#32;&#32;fseek&#32;(fptr,&#32;5,&#32;SEEK_CUR);
<anchor xml:id="_volume__descriptor_8c_source_1l00088"/>00088 
<anchor xml:id="_volume__descriptor_8c_source_1l00089"/>00089 &#32;&#32;uint8_t&#32;descriptor_ver;
<anchor xml:id="_volume__descriptor_8c_source_1l00090"/>00090 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_data__reader_8c_1a3987a7d12b6ef51327e5d1ae63d087cc">read_single_uint8</link>&#32;(fptr,&#32;&amp;descriptor_ver)&#32;!=&#32;0)
<anchor xml:id="_volume__descriptor_8c_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;HH_FREAD_ERROR;
<anchor xml:id="_volume__descriptor_8c_source_1l00092"/>00092 
<anchor xml:id="_volume__descriptor_8c_source_1l00093"/>00093 &#32;&#32;<link linkend="_volume__descriptor_8c_1ac681bcadb940c039ad4b7093f33bb952">create_volume_descriptor</link>&#32;(vd,&#32;descriptor_type,&#32;descriptor_ver);
<anchor xml:id="_volume__descriptor_8c_source_1l00094"/>00094 
<anchor xml:id="_volume__descriptor_8c_source_1l00095"/>00095 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_volume__descriptor_8c_source_1l00096"/>00096 }
<anchor xml:id="_volume__descriptor_8c_source_1l00097"/>00097 
<anchor xml:id="_volume__descriptor_8c_source_1l00098"/>00098 int8_t
<anchor xml:id="_volume__descriptor_8c_source_1l00099"/><link linkend="_volume__descriptor_8c_1a00d2e72d3698261c77ed5e118c4cfb83">00099</link> <link linkend="_volume__descriptor_8c_1a00d2e72d3698261c77ed5e118c4cfb83">process_volume_descriptor_data</link>&#32;(FILE&#32;*fptr,&#32;volume_descriptor_data&#32;*vdd)
<anchor xml:id="_volume__descriptor_8c_source_1l00100"/>00100 {
<anchor xml:id="_volume__descriptor_8c_source_1l00101"/>00101 &#32;&#32;fseek&#32;(fptr,&#32;1,&#32;SEEK_CUR);&#32;<emphasis role="comment">//&#32;Unused&#32;byte</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00102"/>00102 
<anchor xml:id="_volume__descriptor_8c_source_1l00103"/>00103 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="_data__reader_8c_1a095233f80d488c02ecbdd3aca2d38231">read_string</link>&#32;(fptr,&#32;vdd-&gt;system_identifier,&#32;SYSTEM_IDENTIFIER_LEN)&#32;!=&#32;0)
<anchor xml:id="_volume__descriptor_8c_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;||&#32;(<link linkend="_data__reader_8c_1a095233f80d488c02ecbdd3aca2d38231">read_string</link>&#32;(fptr,&#32;vdd-&gt;volume_identifier,&#32;VOLUME_IDENTIFIER_LEN)
<anchor xml:id="_volume__descriptor_8c_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!=&#32;0))
<anchor xml:id="_volume__descriptor_8c_source_1l00106"/>00106 &#32;&#32;&#32;&#32;{
<anchor xml:id="_volume__descriptor_8c_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;HH_FREAD_ERROR;
<anchor xml:id="_volume__descriptor_8c_source_1l00108"/>00108 &#32;&#32;&#32;&#32;}
<anchor xml:id="_volume__descriptor_8c_source_1l00109"/>00109 
<anchor xml:id="_volume__descriptor_8c_source_1l00110"/>00110 &#32;&#32;fseek&#32;(fptr,&#32;8,&#32;SEEK_CUR);&#32;<emphasis role="comment">//&#32;Unused&#32;field</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00111"/>00111 
<anchor xml:id="_volume__descriptor_8c_source_1l00112"/>00112 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_data__reader_8c_1a640713d2880309d518aebed5ebff89e0">read_both_endian_data_uint32</link>&#32;(fptr,&#32;&amp;vdd-&gt;volume_space_size)&#32;!=&#32;0)
<anchor xml:id="_volume__descriptor_8c_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;HH_FREAD_ERROR;
<anchor xml:id="_volume__descriptor_8c_source_1l00114"/>00114 
<anchor xml:id="_volume__descriptor_8c_source_1l00115"/>00115 &#32;&#32;fseek&#32;(fptr,&#32;32,&#32;SEEK_CUR);&#32;<emphasis role="comment">//&#32;Unused&#32;field</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00116"/>00116 
<anchor xml:id="_volume__descriptor_8c_source_1l00117"/>00117 &#32;&#32;<emphasis role="comment">/*&#32;clang-format&#32;off&#32;*/</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00118"/>00118 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="_data__reader_8c_1ac5eb33b86992b7eec9d57407d8bb5bb4">read_both_endian_data_uint16</link>&#32;(fptr,&#32;&amp;vdd-&gt;volume_set_size)&#32;!=&#32;0)
<anchor xml:id="_volume__descriptor_8c_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;||&#32;(<link linkend="_data__reader_8c_1ac5eb33b86992b7eec9d57407d8bb5bb4">read_both_endian_data_uint16</link>&#32;(fptr,&#32;&amp;vdd-&gt;volume_sequence_number)&#32;!=&#32;0)
<anchor xml:id="_volume__descriptor_8c_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;||&#32;(<link linkend="_data__reader_8c_1ac5eb33b86992b7eec9d57407d8bb5bb4">read_both_endian_data_uint16</link>&#32;(fptr,&#32;&amp;vdd-&gt;logical_block_size)&#32;!=&#32;0))
<anchor xml:id="_volume__descriptor_8c_source_1l00121"/>00121 &#32;&#32;{
<anchor xml:id="_volume__descriptor_8c_source_1l00122"/>00122 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;HH_FREAD_ERROR;
<anchor xml:id="_volume__descriptor_8c_source_1l00123"/>00123 &#32;&#32;}
<anchor xml:id="_volume__descriptor_8c_source_1l00124"/>00124 &#32;&#32;<emphasis role="comment">/*&#32;clang-format&#32;on&#32;*/</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00125"/>00125 
<anchor xml:id="_volume__descriptor_8c_source_1l00126"/>00126 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="_data__reader_8c_1a640713d2880309d518aebed5ebff89e0">read_both_endian_data_uint32</link>&#32;(fptr,&#32;&amp;vdd-&gt;path_table_size)&#32;!=&#32;0)
<anchor xml:id="_volume__descriptor_8c_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;||&#32;(<link linkend="_data__reader_8c_1a35b8ba7297a3da1c6b2f847ca471299b">read_little_endian_data_uint32_t</link>&#32;(fptr,
<anchor xml:id="_volume__descriptor_8c_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;vdd-&gt;type_l_path_table_location)
<anchor xml:id="_volume__descriptor_8c_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!=&#32;0)
<anchor xml:id="_volume__descriptor_8c_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;||&#32;(<link linkend="_data__reader_8c_1a35b8ba7297a3da1c6b2f847ca471299b">read_little_endian_data_uint32_t</link>&#32;(
<anchor xml:id="_volume__descriptor_8c_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fptr,&#32;&amp;vdd-&gt;optional_type_l_path_table_location)
<anchor xml:id="_volume__descriptor_8c_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!=&#32;0)
<anchor xml:id="_volume__descriptor_8c_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;||&#32;(<link linkend="_data__reader_8c_1a35b8ba7297a3da1c6b2f847ca471299b">read_little_endian_data_uint32_t</link>&#32;(fptr,
<anchor xml:id="_volume__descriptor_8c_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;vdd-&gt;type_m_path_table_location)
<anchor xml:id="_volume__descriptor_8c_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!=&#32;0)
<anchor xml:id="_volume__descriptor_8c_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;||&#32;(<link linkend="_data__reader_8c_1a35b8ba7297a3da1c6b2f847ca471299b">read_little_endian_data_uint32_t</link>&#32;(
<anchor xml:id="_volume__descriptor_8c_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fptr,&#32;&amp;vdd-&gt;optional_type_m_path_table_location)
<anchor xml:id="_volume__descriptor_8c_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!=&#32;0))
<anchor xml:id="_volume__descriptor_8c_source_1l00139"/>00139 &#32;&#32;&#32;&#32;{
<anchor xml:id="_volume__descriptor_8c_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;HH_FREAD_ERROR;
<anchor xml:id="_volume__descriptor_8c_source_1l00141"/>00141 &#32;&#32;&#32;&#32;}
<anchor xml:id="_volume__descriptor_8c_source_1l00142"/>00142 
<anchor xml:id="_volume__descriptor_8c_source_1l00143"/>00143 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_data__reader_8c_1ac8a5617b9328c9f95fb8ce6cf446bdf0">read_array_uint8</link>&#32;(fptr,&#32;vdd-&gt;root_directory_entry,
<anchor xml:id="_volume__descriptor_8c_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ROOT_DIRECTORY_ENTRY_LEN)
<anchor xml:id="_volume__descriptor_8c_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;!=&#32;0)
<anchor xml:id="_volume__descriptor_8c_source_1l00146"/>00146 &#32;&#32;&#32;&#32;{
<anchor xml:id="_volume__descriptor_8c_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;HH_FREAD_ERROR;
<anchor xml:id="_volume__descriptor_8c_source_1l00148"/>00148 &#32;&#32;&#32;&#32;}
<anchor xml:id="_volume__descriptor_8c_source_1l00149"/>00149 
<anchor xml:id="_volume__descriptor_8c_source_1l00150"/>00150 &#32;&#32;<emphasis role="comment">/*&#32;clang-format&#32;off&#32;*/</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00151"/>00151 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="_data__reader_8c_1a095233f80d488c02ecbdd3aca2d38231">read_string</link>&#32;(fptr,&#32;vdd-&gt;volume_set_identifier,&#32;VOLUME_SET_IDENTIFIER_LEN)&#32;!=&#32;0)
<anchor xml:id="_volume__descriptor_8c_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;||&#32;(<link linkend="_data__reader_8c_1a095233f80d488c02ecbdd3aca2d38231">read_string</link>&#32;(fptr,&#32;vdd-&gt;publisher_identifier,&#32;PUBLISHER_IDENTIFIER_LEN)&#32;!=&#32;0)
<anchor xml:id="_volume__descriptor_8c_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;||&#32;(<link linkend="_data__reader_8c_1a095233f80d488c02ecbdd3aca2d38231">read_string</link>&#32;(fptr,&#32;vdd-&gt;data_preparer_identifier,&#32;DATA_PREPARER_IDENTIFIER_LEN)&#32;!=&#32;0)
<anchor xml:id="_volume__descriptor_8c_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;||&#32;(<link linkend="_data__reader_8c_1a095233f80d488c02ecbdd3aca2d38231">read_string</link>&#32;(fptr,&#32;vdd-&gt;application_identifier,&#32;APPLICATION_IDENTIFIER_LEN)&#32;!=&#32;0)
<anchor xml:id="_volume__descriptor_8c_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;||&#32;(<link linkend="_data__reader_8c_1a095233f80d488c02ecbdd3aca2d38231">read_string</link>&#32;(fptr,&#32;vdd-&gt;copyright_file_identifier,&#32;COPYRIGHT_FILE_IDENTIFIER_LEN)&#32;!=&#32;0)
<anchor xml:id="_volume__descriptor_8c_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;||&#32;(<link linkend="_data__reader_8c_1a095233f80d488c02ecbdd3aca2d38231">read_string</link>&#32;(fptr,&#32;vdd-&gt;abstract_file_identifier,&#32;ABSTRACT_FILE_IDENTIFIER_LEN)&#32;!=&#32;0)
<anchor xml:id="_volume__descriptor_8c_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;||&#32;(<link linkend="_data__reader_8c_1a095233f80d488c02ecbdd3aca2d38231">read_string</link>&#32;(fptr,&#32;vdd-&gt;bibliographic_file_identifier,&#32;BIBLIOGRAPHIC_FILE_IDENTIFIER_LEN)&#32;!=&#32;0))
<anchor xml:id="_volume__descriptor_8c_source_1l00158"/>00158 &#32;&#32;{
<anchor xml:id="_volume__descriptor_8c_source_1l00159"/>00159 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;HH_FREAD_ERROR;
<anchor xml:id="_volume__descriptor_8c_source_1l00160"/>00160 &#32;&#32;}
<anchor xml:id="_volume__descriptor_8c_source_1l00161"/>00161 &#32;&#32;<emphasis role="comment">/*&#32;clang-format&#32;on&#32;*/</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00162"/>00162 
<anchor xml:id="_volume__descriptor_8c_source_1l00163"/>00163 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="_data__reader_8c_1a9fa8fe51a3363438da9a616c4363e837">read_dec_datetime</link>&#32;(fptr,&#32;&amp;vdd-&gt;volume_creation_date_and_time)&#32;!=&#32;0)
<anchor xml:id="_volume__descriptor_8c_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;||&#32;(<link linkend="_data__reader_8c_1a9fa8fe51a3363438da9a616c4363e837">read_dec_datetime</link>&#32;(fptr,&#32;&amp;vdd-&gt;volume_modification_date_and_time)
<anchor xml:id="_volume__descriptor_8c_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!=&#32;0)
<anchor xml:id="_volume__descriptor_8c_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;||&#32;(<link linkend="_data__reader_8c_1a9fa8fe51a3363438da9a616c4363e837">read_dec_datetime</link>&#32;(fptr,&#32;&amp;vdd-&gt;volume_expiration_date_and_time)&#32;!=&#32;0)
<anchor xml:id="_volume__descriptor_8c_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;||&#32;(<link linkend="_data__reader_8c_1a9fa8fe51a3363438da9a616c4363e837">read_dec_datetime</link>&#32;(fptr,&#32;&amp;vdd-&gt;volume_effective_date_and_time)&#32;!=&#32;0))
<anchor xml:id="_volume__descriptor_8c_source_1l00168"/>00168 &#32;&#32;&#32;&#32;{
<anchor xml:id="_volume__descriptor_8c_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;HH_FREAD_ERROR;
<anchor xml:id="_volume__descriptor_8c_source_1l00170"/>00170 &#32;&#32;&#32;&#32;}
<anchor xml:id="_volume__descriptor_8c_source_1l00171"/>00171 
<anchor xml:id="_volume__descriptor_8c_source_1l00172"/>00172 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_data__reader_8c_1a3987a7d12b6ef51327e5d1ae63d087cc">read_single_uint8</link>&#32;(fptr,&#32;&amp;vdd-&gt;file_structure_version)&#32;!=&#32;0)
<anchor xml:id="_volume__descriptor_8c_source_1l00173"/>00173 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;HH_FREAD_ERROR;
<anchor xml:id="_volume__descriptor_8c_source_1l00174"/>00174 
<anchor xml:id="_volume__descriptor_8c_source_1l00175"/>00175 &#32;&#32;fseek&#32;(fptr,&#32;1,&#32;SEEK_CUR);&#32;<emphasis role="comment">//&#32;Unused&#32;byte</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00176"/>00176 
<anchor xml:id="_volume__descriptor_8c_source_1l00177"/>00177 &#32;&#32;<link linkend="_data__reader_8c_1a095233f80d488c02ecbdd3aca2d38231">read_string</link>&#32;(fptr,&#32;vdd-&gt;DAT_file_creation_software_identifier,
<anchor xml:id="_volume__descriptor_8c_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DAT_FILE_CREATION_SOFTWARE_IDENTIFIER_LEN);
<anchor xml:id="_volume__descriptor_8c_source_1l00179"/>00179 
<anchor xml:id="_volume__descriptor_8c_source_1l00180"/>00180 &#32;&#32;fseek&#32;(fptr,&#32;1,&#32;SEEK_CUR);&#32;<emphasis role="comment">//&#32;Unused&#32;byte</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00181"/>00181 
<anchor xml:id="_volume__descriptor_8c_source_1l00182"/>00182 &#32;&#32;<link linkend="_data__reader_8c_1a095233f80d488c02ecbdd3aca2d38231">read_string</link>&#32;(fptr,&#32;vdd-&gt;DAT_file_creation_software_version_number,
<anchor xml:id="_volume__descriptor_8c_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DAT_FILE_CREATION_SOFTWARE_VERSION_NUMBER_LEN);
<anchor xml:id="_volume__descriptor_8c_source_1l00184"/>00184 
<anchor xml:id="_volume__descriptor_8c_source_1l00185"/>00185 &#32;&#32;fseek&#32;(fptr,&#32;1,&#32;SEEK_CUR);&#32;<emphasis role="comment">//&#32;Unused&#32;byte</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00186"/>00186 
<anchor xml:id="_volume__descriptor_8c_source_1l00187"/>00187 &#32;&#32;fseek&#32;(fptr,&#32;0x1EC,&#32;SEEK_CUR);&#32;<emphasis role="comment">//&#32;Unknown&#32;data&#32;(492&#32;bytes)</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00188"/>00188 
<anchor xml:id="_volume__descriptor_8c_source_1l00189"/>00189 &#32;&#32;fseek&#32;(fptr,&#32;0x28D,&#32;SEEK_CUR);&#32;<emphasis role="comment">//&#32;Reserved&#32;by&#32;ISO</emphasis>
<anchor xml:id="_volume__descriptor_8c_source_1l00190"/>00190 
<anchor xml:id="_volume__descriptor_8c_source_1l00191"/>00191 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_volume__descriptor_8c_source_1l00192"/>00192 }
</programlisting></section>
