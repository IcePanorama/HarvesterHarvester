<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_utils_8h" xml:lang="en-US">
<title>src/utils.h File Reference</title>
<indexterm><primary>src/utils.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;file_flags.h&quot;<?linebreak?>#include &lt;stdbool.h&gt;<?linebreak?>#include &lt;stdint.h&gt;<?linebreak?>#include &lt;stdio.h&gt;<?linebreak?></programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>uint16_t <link linkend="_utils_8h_1a4965520bde2fd7164397a78f8026164a">change_endianness_uint16</link> (uint16_t value)</para>

<para>Swaps a given <computeroutput>uint16_t</computeroutput> from little endian to big endian or vice-versa. </para>
</listitem>
            <listitem><para>void <link linkend="_utils_8h_1a5d12d6ba0683fa0c576d2ee3a6006656">read_file_flags</link> (FILE *fptr, <link linkend="_structfile__flags">file_flags</link> *ff)</para>

<para>Reads file flag data in from a given source pointed to by <computeroutput>fptr</computeroutput> and uses that data to update the various flags in <computeroutput>ff</computeroutput> as needed. </para>
</listitem>
            <listitem><para>void <link linkend="_utils_8h_1af6ebb1daf24f6259fa021c9a0e8e516c">prepend_path_string</link> (char *str, const char *prefix)</para>
</listitem>
            <listitem><para>bool <link linkend="_utils_8h_1aee9f9bd7844e8e7d21d0965980b6e9ed">is_string_dat_file</link> (char *str)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_utils_8h_1a4965520bde2fd7164397a78f8026164a"/><section>
    <title>change_endianness_uint16()</title>
<indexterm><primary>change_endianness_uint16</primary><secondary>utils.h</secondary></indexterm>
<indexterm><primary>utils.h</primary><secondary>change_endianness_uint16</secondary></indexterm>
<para><computeroutput>uint16_t change_endianness_uint16 (uint16_t value)</computeroutput></para><para>

<para>Swaps a given <computeroutput>uint16_t</computeroutput> from little endian to big endian or vice-versa. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>value</entry><entry>
<para>uint16_t to be swapped. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>value with its endianness swapped. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_data__reader_8c_source_1l00145">145</link> of file <link linkend="_data__reader_8c_source">data_reader.c</link>.</para>
</section>
<anchor xml:id="_utils_8h_1aee9f9bd7844e8e7d21d0965980b6e9ed"/><section>
    <title>is_string_dat_file()</title>
<indexterm><primary>is_string_dat_file</primary><secondary>utils.h</secondary></indexterm>
<indexterm><primary>utils.h</primary><secondary>is_string_dat_file</secondary></indexterm>
<para><computeroutput>bool is_string_dat_file (char * str)</computeroutput></para><para>
Definition at line <link linkend="_utils_8c_source_1l00033">33</link> of file <link linkend="_utils_8c_source">utils.c</link>.</para>
</section>
<anchor xml:id="_utils_8h_1af6ebb1daf24f6259fa021c9a0e8e516c"/><section>
    <title>prepend_path_string()</title>
<indexterm><primary>prepend_path_string</primary><secondary>utils.h</secondary></indexterm>
<indexterm><primary>utils.h</primary><secondary>prepend_path_string</secondary></indexterm>
<para><computeroutput>void prepend_path_string (char * str, const char * prefix)</computeroutput></para><para>
Definition at line <link linkend="_utils_8c_source_1l00011">11</link> of file <link linkend="_utils_8c_source">utils.c</link>.</para>
</section>
<anchor xml:id="_utils_8h_1a5d12d6ba0683fa0c576d2ee3a6006656"/><section>
    <title>read_file_flags()</title>
<indexterm><primary>read_file_flags</primary><secondary>utils.h</secondary></indexterm>
<indexterm><primary>utils.h</primary><secondary>read_file_flags</secondary></indexterm>
<para><computeroutput>void read_file_flags (FILE * fptr, <link linkend="_structfile__flags">file_flags</link> * ff)</computeroutput></para><para>

<para>Reads file flag data in from a given source pointed to by <computeroutput>fptr</computeroutput> and uses that data to update the various flags in <computeroutput>ff</computeroutput> as needed. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>fptr</entry><entry>
<para>Pointer to file with file flag data </para>
</entry>
                            </row>
                            <row>
<entry>ff</entry><entry>
<para>file flags to be updated. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link linkend="_structfile__flags">file_flags</link> </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_data__reader_8c_source_1l00166">166</link> of file <link linkend="_data__reader_8c_source">data_reader.c</link>.</para>
</section>
</section>
</section>
