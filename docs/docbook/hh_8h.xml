<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_hh_8h" xml:lang="en-US">
<title>src/hh.h File Reference</title>
<indexterm><primary>src/hh.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;stdint.h&gt;<?linebreak?>#include &lt;stdio.h&gt;<?linebreak?></programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>static int8_t <link linkend="_hh_8h_1afed626f0d81bd0489c48269affcff572">setup_extractor</link> (FILE **fptr, char *filename)</para>

<para><link linkend="_hh_8h">hh.h</link> - the main interface to interact with HarvesterHarvester </para>
</listitem>
            <listitem><para>static int8_t <link linkend="_hh_8h_1a534dd93fd3f79749a0c7741f46a1aea6">process_DAT_file</link> (FILE *fptr)</para>

<para>Processes a DAT file pointed to by the given <computeroutput>FILE *</computeroutput>. </para>
</listitem>
            <listitem><para>static int8_t <link linkend="_hh_8h_1ae217f3d8cb5e691184f81e097a61ed15">batch_process_DAT_files</link> (void)</para>

<para>Processes all the <computeroutput>.DAT</computeroutput> files found in <computeroutput>OP_INPUT_DIR</computeroutput>, one at a time. </para>
</listitem>
            <listitem><para>static int8_t <link linkend="_hh_8h_1ad1e46ba73646c792f1ab0a9c2457929e">process_internal_dat_files</link> (void)</para>

<para>Process all the new <computeroutput>.DAT</computeroutput> files created by <computeroutput>process_DAT_file</computeroutput>. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_hh_8h_1ae217f3d8cb5e691184f81e097a61ed15"/><section>
    <title>batch_process_DAT_files()</title>
<indexterm><primary>batch_process_DAT_files</primary><secondary>hh.h</secondary></indexterm>
<indexterm><primary>hh.h</primary><secondary>batch_process_DAT_files</secondary></indexterm>
<para><computeroutput>static int8_t batch_process_DAT_files (void )<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Processes all the <computeroutput>.DAT</computeroutput> files found in <computeroutput>OP_INPUT_DIR</computeroutput>, one at a time. </para>
</para>

<para><formalpara><title>Returns</title>

<para>zero on success, non-zero on failure. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_hh_8c_source_1l00174">174</link> of file <link linkend="_hh_8c_source">hh.c</link>.</para>
</section>
<anchor xml:id="_hh_8h_1a534dd93fd3f79749a0c7741f46a1aea6"/><section>
    <title>process_DAT_file()</title>
<indexterm><primary>process_DAT_file</primary><secondary>hh.h</secondary></indexterm>
<indexterm><primary>hh.h</primary><secondary>process_DAT_file</secondary></indexterm>
<para><computeroutput>static int8_t process_DAT_file (FILE * fptr)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Processes a DAT file pointed to by the given <computeroutput>FILE *</computeroutput>. </para>
</para>

<para>This is accomplished by first processing the volume descriptor header (checking that this is indeed a primary volume descriptor after it does so) and the volume descriptor data. Once complete, it updates the <computeroutput>CURRENT_DISK_NAME</computeroutput> variable using the appropriate data. Finally, it constructs a path table, a extracts every file from the given DAT file to the <computeroutput>OP_OUTPUT_DIR</computeroutput>.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>fptr</entry><entry>
<para>a file pointer to a DAT file. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>See also</title>

<para><link xlink:href="https://wiki.osdev.org/ISO_9660">https://wiki.osdev.org/ISO_9660</link> </para>

<para><link linkend="_volume__descriptor_8c_1ab0bb4ee4fd340fd1a57cf8e1112c66b5">process_volume_descriptor_header()</link> </para>

<para><link linkend="_volume__descriptor_8c_1a00d2e72d3698261c77ed5e118c4cfb83">process_volume_descriptor_data()</link> </para>

<para><link linkend="_path__table_8c_1ac08be1296d016ba9a28db25b35ca9132">create_path_table()</link> </para>

<para><link linkend="_path__table_8c_1a74af82c548f791d3b0919eeebbf078d4">process_type_l_path_table()</link> </para>

<para><link linkend="_extractor_8c_1a4727cdfccac62ddc325d2ed70eddf467">extract_directory()</link> </para>
</formalpara>
<formalpara><title>Returns</title>

<para>zero on success, non-zero on failure. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_hh_8c_source_1l00089">89</link> of file <link linkend="_hh_8c_source">hh.c</link>.</para>
</section>
<anchor xml:id="_hh_8h_1ad1e46ba73646c792f1ab0a9c2457929e"/><section>
    <title>process_internal_dat_files()</title>
<indexterm><primary>process_internal_dat_files</primary><secondary>hh.h</secondary></indexterm>
<indexterm><primary>hh.h</primary><secondary>process_internal_dat_files</secondary></indexterm>
<para><computeroutput>static int8_t process_internal_dat_files (void )<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Process all the new <computeroutput>.DAT</computeroutput> files created by <computeroutput>process_DAT_file</computeroutput>. </para>
</para>

<para>These <computeroutput>.DAT</computeroutput> files are not ISO 9660 file systems, rather they&apos;re some proprietary format. These files can be processed by reading the associated <computeroutput>INDEX.00#</computeroutput> file, which contains all the filenames, paths, and location of data for files stored in these new <computeroutput>.DAT</computeroutput> files.</para>

<para><formalpara><title>Returns</title>

<para>int8_t zero on success, non-zero on failure. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_hh_8c_source_1l00296">296</link> of file <link linkend="_hh_8c_source">hh.c</link>.</para>
</section>
<anchor xml:id="_hh_8h_1afed626f0d81bd0489c48269affcff572"/><section>
    <title>setup_extractor()</title>
<indexterm><primary>setup_extractor</primary><secondary>hh.h</secondary></indexterm>
<indexterm><primary>hh.h</primary><secondary>setup_extractor</secondary></indexterm>
<para><computeroutput>static int8_t setup_extractor (FILE ** fptr, char * filename)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para><link linkend="_hh_8h">hh.h</link> - the main interface to interact with HarvesterHarvester </para>
</para>

<para>Creates a <computeroutput>FILE *</computeroutput> for the given <computeroutput>filename</computeroutput>, handling error messages as needed, while also checking the end-user&apos;s operating system and updating <computeroutput>OP_PATH_SEPARATOR</computeroutput>. The caller is responsible for closing the file pointer when they&apos;re finished with it.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>fptr</entry><entry>
<para>a file pointer to the file associated with the given filename </para>
</entry>
                            </row>
                            <row>
<entry>filename</entry><entry>
<para>the path to a DAT file </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>zero on success, non-zero on failure. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_hh_8c_source_1l00070">70</link> of file <link linkend="_hh_8c_source">hh.c</link>.</para>
</section>
</section>
</section>
