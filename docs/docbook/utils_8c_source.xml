<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_utils_8c_source" xml:lang="en-US">
<title>utils.c</title>
<indexterm><primary>src/utils.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_utils_8c_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_utils_8h">utils.h</link>&quot;</emphasis>
<anchor xml:id="_utils_8c_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_data__reader_8h">data_reader.h</link>&quot;</emphasis>
<anchor xml:id="_utils_8c_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_errors_8h">errors.h</link>&quot;</emphasis>
<anchor xml:id="_utils_8c_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_options_8h">options.h</link>&quot;</emphasis>
<anchor xml:id="_utils_8c_source_1l00005"/>00005 
<anchor xml:id="_utils_8c_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&lt;stdbool.h&gt;</emphasis>
<anchor xml:id="_utils_8c_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&lt;stdint.h&gt;</emphasis>
<anchor xml:id="_utils_8c_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="_utils_8c_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
<anchor xml:id="_utils_8c_source_1l00010"/>00010 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
<anchor xml:id="_utils_8c_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&lt;sys/stat.h&gt;</emphasis>
<anchor xml:id="_utils_8c_source_1l00012"/>00012 
<anchor xml:id="_utils_8c_source_1l00013"/>00013 <emphasis role="preprocessor">#ifdef&#32;_WIN32</emphasis>
<anchor xml:id="_utils_8c_source_1l00014"/>00014 <emphasis role="preprocessor">#include&#32;&lt;direct.h&gt;</emphasis>
<anchor xml:id="_utils_8c_source_1l00015"/>00015 <emphasis role="preprocessor">#include&#32;&lt;windows.h&gt;</emphasis>
<anchor xml:id="_utils_8c_source_1l00016"/>00016 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_utils_8c_source_1l00017"/>00017 <emphasis role="preprocessor">#include&#32;&lt;unistd.h&gt;</emphasis>
<anchor xml:id="_utils_8c_source_1l00018"/>00018 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_utils_8c_source_1l00019"/>00019 
<anchor xml:id="_utils_8c_source_1l00020"/>00020 int8_t
<anchor xml:id="_utils_8c_source_1l00021"/><link linkend="_utils_8c_1a41ffa7a16724ed0473f420933cfb7b87">00021</link> <link linkend="_utils_8c_1a41ffa7a16724ed0473f420933cfb7b87">prepend_path_string</link>&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*str,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*prefix)
<anchor xml:id="_utils_8c_source_1l00022"/>00022 {
<anchor xml:id="_utils_8c_source_1l00023"/>00023 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp&#32;(prefix,&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)<emphasis role="stringliteral">&quot;&quot;</emphasis>)&#32;==&#32;0
<anchor xml:id="_utils_8c_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;||&#32;strcmp&#32;(prefix,&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)<emphasis role="stringliteral">&quot;\1&quot;</emphasis>)&#32;==&#32;0)
<anchor xml:id="_utils_8c_source_1l00025"/>00025 &#32;&#32;&#32;&#32;{
<anchor xml:id="_utils_8c_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_utils_8c_source_1l00027"/>00027 &#32;&#32;&#32;&#32;}
<anchor xml:id="_utils_8c_source_1l00028"/>00028 
<anchor xml:id="_utils_8c_source_1l00029"/>00029 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*tmp&#32;=&#32;calloc&#32;(strlen&#32;(str)&#32;+&#32;strlen&#32;(prefix)&#32;+&#32;2,&#32;<emphasis role="keyword">sizeof</emphasis>&#32;(<emphasis role="keywordtype">char</emphasis>));
<anchor xml:id="_utils_8c_source_1l00030"/>00030 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tmp&#32;==&#32;NULL)
<anchor xml:id="_utils_8c_source_1l00031"/>00031 &#32;&#32;&#32;&#32;{
<anchor xml:id="_utils_8c_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;ERROR:&#32;unable&#32;to&#32;calloc&#32;tmp&#32;string&quot;</emphasis>);
<anchor xml:id="_utils_8c_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_errors_8h_1a7c84f993e326519edca8fd9efdec746eafdb159091103067c71a4ed9205ba9a6d">HH_MEM_ALLOC_ERROR</link>;
<anchor xml:id="_utils_8c_source_1l00034"/>00034 &#32;&#32;&#32;&#32;}
<anchor xml:id="_utils_8c_source_1l00035"/>00035 
<anchor xml:id="_utils_8c_source_1l00036"/>00036 &#32;&#32;strcpy&#32;(tmp,&#32;str);
<anchor xml:id="_utils_8c_source_1l00037"/>00037 &#32;&#32;strcpy&#32;(str,&#32;prefix);
<anchor xml:id="_utils_8c_source_1l00038"/>00038 &#32;&#32;strcat&#32;(str,&#32;&amp;<link linkend="_options_8c_1a845934c83dddb0516baadb1abd079d8d">OP_PATH_SEPARATOR</link>);
<anchor xml:id="_utils_8c_source_1l00039"/>00039 &#32;&#32;strcat&#32;(str,&#32;tmp);
<anchor xml:id="_utils_8c_source_1l00040"/>00040 &#32;&#32;free&#32;(tmp);
<anchor xml:id="_utils_8c_source_1l00041"/>00041 
<anchor xml:id="_utils_8c_source_1l00042"/>00042 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_utils_8c_source_1l00043"/>00043 }
<anchor xml:id="_utils_8c_source_1l00044"/>00044 
<anchor xml:id="_utils_8c_source_1l00045"/>00045 <emphasis role="keywordtype">void</emphasis>
<anchor xml:id="_utils_8c_source_1l00046"/><link linkend="_utils_8c_1a7f5f49b4dabd84b37e8f7b9464e57992">00046</link> <link linkend="_utils_8c_1a7f5f49b4dabd84b37e8f7b9464e57992">prepend_string</link>&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*str,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*prefix)
<anchor xml:id="_utils_8c_source_1l00047"/>00047 {
<anchor xml:id="_utils_8c_source_1l00048"/>00048 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp&#32;(prefix,&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)<emphasis role="stringliteral">&quot;&quot;</emphasis>)&#32;==&#32;0
<anchor xml:id="_utils_8c_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;||&#32;strcmp&#32;(prefix,&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)<emphasis role="stringliteral">&quot;\1&quot;</emphasis>)&#32;==&#32;0)
<anchor xml:id="_utils_8c_source_1l00050"/>00050 &#32;&#32;&#32;&#32;{
<anchor xml:id="_utils_8c_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_utils_8c_source_1l00052"/>00052 &#32;&#32;&#32;&#32;}
<anchor xml:id="_utils_8c_source_1l00053"/>00053 
<anchor xml:id="_utils_8c_source_1l00054"/>00054 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*tmp&#32;=&#32;calloc&#32;(strlen&#32;(str)&#32;+&#32;strlen&#32;(prefix)&#32;+&#32;2,&#32;<emphasis role="keyword">sizeof</emphasis>&#32;(<emphasis role="keywordtype">char</emphasis>));
<anchor xml:id="_utils_8c_source_1l00055"/>00055 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tmp&#32;==&#32;NULL)
<anchor xml:id="_utils_8c_source_1l00056"/>00056 &#32;&#32;&#32;&#32;{
<anchor xml:id="_utils_8c_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;perror&#32;(<emphasis role="stringliteral">&quot;ERROR:&#32;unable&#32;to&#32;calloc&#32;tmp&#32;string&quot;</emphasis>);
<anchor xml:id="_utils_8c_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;exit&#32;(1);
<anchor xml:id="_utils_8c_source_1l00059"/>00059 &#32;&#32;&#32;&#32;}
<anchor xml:id="_utils_8c_source_1l00060"/>00060 &#32;&#32;strcpy&#32;(tmp,&#32;str);
<anchor xml:id="_utils_8c_source_1l00061"/>00061 &#32;&#32;strcpy&#32;(str,&#32;prefix);
<anchor xml:id="_utils_8c_source_1l00062"/>00062 &#32;&#32;strcat&#32;(str,&#32;tmp);
<anchor xml:id="_utils_8c_source_1l00063"/>00063 &#32;&#32;free&#32;(tmp);
<anchor xml:id="_utils_8c_source_1l00064"/>00064 }
<anchor xml:id="_utils_8c_source_1l00065"/>00065 
<anchor xml:id="_utils_8c_source_1l00066"/>00066 <emphasis role="keywordtype">bool</emphasis>
<anchor xml:id="_utils_8c_source_1l00067"/><link linkend="_utils_8c_1aee9f9bd7844e8e7d21d0965980b6e9ed">00067</link> <link linkend="_utils_8c_1aee9f9bd7844e8e7d21d0965980b6e9ed">is_string_dat_file</link>&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*str)
<anchor xml:id="_utils_8c_source_1l00068"/>00068 {
<anchor xml:id="_utils_8c_source_1l00069"/>00069 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*EXPECTED_EXTENSION&#32;=&#32;<emphasis role="stringliteral">&quot;.DAT&quot;</emphasis>;
<anchor xml:id="_utils_8c_source_1l00070"/>00070 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;EXTENSION_LEN&#32;=&#32;5;&#32;<emphasis role="comment">//&#32;+1&#32;for&#32;null&#32;terminator</emphasis>
<anchor xml:id="_utils_8c_source_1l00071"/>00071 
<anchor xml:id="_utils_8c_source_1l00072"/>00072 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;len&#32;=&#32;strlen&#32;(str)&#32;+&#32;1;
<anchor xml:id="_utils_8c_source_1l00073"/>00073 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(len&#32;&gt;&#32;EXTENSION_LEN
<anchor xml:id="_utils_8c_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;strcmp&#32;(str&#32;+&#32;(len&#32;-&#32;EXTENSION_LEN),&#32;EXPECTED_EXTENSION)&#32;==&#32;0);
<anchor xml:id="_utils_8c_source_1l00075"/>00075 }
<anchor xml:id="_utils_8c_source_1l00076"/>00076 
<anchor xml:id="_utils_8c_source_1l00077"/>00077 <emphasis role="keywordtype">bool</emphasis>
<anchor xml:id="_utils_8c_source_1l00078"/><link linkend="_utils_8c_1a28cf3fb6f4d89ea760afeca3f07a377b">00078</link> <link linkend="_utils_8c_1a28cf3fb6f4d89ea760afeca3f07a377b">directory_exists</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*dir)
<anchor xml:id="_utils_8c_source_1l00079"/>00079 {
<anchor xml:id="_utils_8c_source_1l00080"/>00080 <emphasis role="preprocessor">#ifdef&#32;_WIN32</emphasis>
<anchor xml:id="_utils_8c_source_1l00081"/>00081 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>_stat&#32;st;
<anchor xml:id="_utils_8c_source_1l00082"/>00082 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(_stat&#32;(dir,&#32;&amp;st)&#32;==&#32;0&#32;&amp;&amp;&#32;(st.st_mode&#32;&amp;&#32;_S_IFDIR));
<anchor xml:id="_utils_8c_source_1l00083"/>00083 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_utils_8c_source_1l00084"/>00084 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>stat&#32;st;
<anchor xml:id="_utils_8c_source_1l00085"/>00085 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(stat&#32;(dir,&#32;&amp;st)&#32;==&#32;0&#32;&amp;&amp;&#32;S_ISDIR&#32;(st.st_mode));
<anchor xml:id="_utils_8c_source_1l00086"/>00086 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_utils_8c_source_1l00087"/>00087 }
<anchor xml:id="_utils_8c_source_1l00088"/>00088 
<anchor xml:id="_utils_8c_source_1l00089"/>00089 <emphasis role="keywordtype">bool</emphasis>
<anchor xml:id="_utils_8c_source_1l00090"/><link linkend="_utils_8c_1a0038df898c35b6a483fa874b3671735b">00090</link> <link linkend="_utils_8c_1a0038df898c35b6a483fa874b3671735b">file_exists</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*filename)
<anchor xml:id="_utils_8c_source_1l00091"/>00091 {
<anchor xml:id="_utils_8c_source_1l00092"/>00092 <emphasis role="preprocessor">#ifdef&#32;_WIN32</emphasis>
<anchor xml:id="_utils_8c_source_1l00093"/>00093 &#32;&#32;DWORD&#32;attribs&#32;=&#32;GetFileAttributes&#32;(filename);
<anchor xml:id="_utils_8c_source_1l00094"/>00094 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;attribs&#32;!=&#32;INVALID_FILE_ATTRIBUTES
<anchor xml:id="_utils_8c_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;!(attribs&#32;&amp;&#32;FILE_ATTRIBUTE_DIRECTORY);
<anchor xml:id="_utils_8c_source_1l00096"/>00096 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_utils_8c_source_1l00097"/>00097 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;access&#32;(filename,&#32;F_OK)&#32;!=&#32;-1;
<anchor xml:id="_utils_8c_source_1l00098"/>00098 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_utils_8c_source_1l00099"/>00099 }
<anchor xml:id="_utils_8c_source_1l00100"/>00100 
<anchor xml:id="_utils_8c_source_1l00102"/>00102 <emphasis role="keywordtype">bool</emphasis>
<anchor xml:id="_utils_8c_source_1l00103"/><link linkend="_utils_8c_1a4ce51b557efd36a5220e51669c79cc86">00103</link> <link linkend="_utils_8c_1a4ce51b557efd36a5220e51669c79cc86">peek_char_is</link>&#32;(FILE&#32;*fptr,&#32;uint8_t&#32;expected_ch)
<anchor xml:id="_utils_8c_source_1l00104"/>00104 {
<anchor xml:id="_utils_8c_source_1l00105"/>00105 &#32;&#32;uint8_t&#32;byte;
<anchor xml:id="_utils_8c_source_1l00106"/>00106 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_data__reader_8c_1a3987a7d12b6ef51327e5d1ae63d087cc">read_single_uint8</link>&#32;(fptr,&#32;&amp;<emphasis role="keywordtype">byte</emphasis>)&#32;!=&#32;0)
<anchor xml:id="_utils_8c_source_1l00107"/>00107 &#32;&#32;&#32;&#32;{
<anchor xml:id="_utils_8c_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_utils_8c_source_1l00109"/>00109 &#32;&#32;&#32;&#32;}
<anchor xml:id="_utils_8c_source_1l00110"/>00110 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;==&#32;expected_ch)
<anchor xml:id="_utils_8c_source_1l00111"/>00111 &#32;&#32;&#32;&#32;{
<anchor xml:id="_utils_8c_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_utils_8c_source_1l00113"/>00113 &#32;&#32;&#32;&#32;}
<anchor xml:id="_utils_8c_source_1l00114"/>00114 
<anchor xml:id="_utils_8c_source_1l00115"/>00115 &#32;&#32;fseek&#32;(fptr,&#32;-1,&#32;SEEK_CUR);
<anchor xml:id="_utils_8c_source_1l00116"/>00116 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_utils_8c_source_1l00117"/>00117 }
<anchor xml:id="_utils_8c_source_1l00118"/>00118 
<anchor xml:id="_utils_8c_source_1l00120"/>00120 <emphasis role="keywordtype">bool</emphasis>
<anchor xml:id="_utils_8c_source_1l00121"/><link linkend="_utils_8c_1ad89ab9462dec77ec0a6c4f32f731f7ff">00121</link> <link linkend="_utils_8c_1ad89ab9462dec77ec0a6c4f32f731f7ff">peek_eof</link>&#32;(FILE&#32;*fptr)
<anchor xml:id="_utils_8c_source_1l00122"/>00122 {
<anchor xml:id="_utils_8c_source_1l00123"/>00123 &#32;&#32;uint8_t&#32;value;
<anchor xml:id="_utils_8c_source_1l00124"/>00124 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytes_read&#32;=&#32;fread&#32;(&amp;value,&#32;<emphasis role="keyword">sizeof</emphasis>&#32;(uint8_t),&#32;1,&#32;fptr);
<anchor xml:id="_utils_8c_source_1l00125"/>00125 &#32;&#32;fseek&#32;(fptr,&#32;-1,&#32;SEEK_CUR);
<anchor xml:id="_utils_8c_source_1l00126"/>00126 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bytes_read&#32;==&#32;0;
<anchor xml:id="_utils_8c_source_1l00127"/>00127 }
<anchor xml:id="_utils_8c_source_1l00128"/>00128 
<anchor xml:id="_utils_8c_source_1l00129"/>00129 uint16_t
<anchor xml:id="_utils_8c_source_1l00130"/><link linkend="_utils_8c_1a4965520bde2fd7164397a78f8026164a">00130</link> <link linkend="_utils_8c_1a4965520bde2fd7164397a78f8026164a">change_endianness_uint16</link>&#32;(uint16_t&#32;value)
<anchor xml:id="_utils_8c_source_1l00131"/>00131 {
<anchor xml:id="_utils_8c_source_1l00132"/>00132 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(value&#32;&lt;&lt;&#32;8)&#32;|&#32;(value&#32;&gt;&gt;&#32;8);
<anchor xml:id="_utils_8c_source_1l00133"/>00133 }
</programlisting></section>
