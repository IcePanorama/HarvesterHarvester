<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_errors_8h" xml:lang="en-US">
<title>src/errors.h File Reference</title>
<indexterm><primary>src/errors.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;stdint.h&gt;<?linebreak?>#include &lt;stdio.h&gt;<?linebreak?></programlisting><simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_errors_8h_1a7c84f993e326519edca8fd9efdec746e">HH_ERRORS</link> { <?linebreak?><link linkend="_errors_8h_1a7c84f993e326519edca8fd9efdec746eaa67a554e13599ff5d070f2d0285e147a">HH_FOPEN_ERROR</link> = -1
, <link linkend="_errors_8h_1a7c84f993e326519edca8fd9efdec746ea0c1be935ae4f22ab2131ac82f875a6df">HH_FREAD_ERROR</link> = -2
, <link linkend="_errors_8h_1a7c84f993e326519edca8fd9efdec746ea6e1ae6020f33cd0672404554c59ea5e3">HH_PT_RESIZE_ERROR</link> = -3
, <link linkend="_errors_8h_1a7c84f993e326519edca8fd9efdec746eafdb159091103067c71a4ed9205ba9a6d">HH_MEM_ALLOC_ERROR</link> = -4
, <?linebreak?><link linkend="_errors_8h_1a7c84f993e326519edca8fd9efdec746ea728e5e6c78909b6e19994316188847aa">HH_CREATE_OUTPUT_DIR_ERROR</link> = -5
 }</para>

<para><link linkend="_errors_8h">errors.h</link> - a wrapper for all of hh&apos;s potential errors. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_errors_8h_1a1fa621098d550bb126a641aba0638f7f">improper_usage_error</link> (void)</para>

<para>Throws an improper usage error. </para>
</listitem>
            <listitem><para>void <link linkend="_errors_8h_1a9b9a6494b96286134308f2da3e179af9">fopen_error</link> (char *filename)</para>

<para>Throws an fopen error. </para>
</listitem>
            <listitem><para><link linkend="_errors_8h_1a7c84f993e326519edca8fd9efdec746e">HH_ERRORS</link> <link linkend="_errors_8h_1a2628891f509e5466f8a7c932a72bd2dc">handle_fread_error</link> (size_t actual, size_t expected_bytes)</para>

<para>Throws an fread error. </para>
</listitem>
            <listitem><para>void <link linkend="_errors_8h_1a2343c2fe78d79e1bd2092a5aa19964b0">handle_unknown_command_line_argument_error</link> (char *arg)</para>

<para>Throws an unknown command line argument error. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>const char * <link linkend="_errors_8h_1ab2272d0da4232afba19f95bf02944157">CALLOC_FAILED_ERR_MSG_FMT</link></para>

<para>Format string for failed calloc error message. </para>
</listitem>
            <listitem><para>const char * <link linkend="_errors_8h_1a03ff53905312bd88e728b1863cf1b1c9">FOPEN_FAILED_ERR_MSG_FMT</link></para>

<para>Format string for failed fopen error message. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="_errors_8h_1a7c84f993e326519edca8fd9efdec746e"/><section>
    <title>HH_ERRORS</title>
<indexterm><primary>HH_ERRORS</primary><secondary>errors.h</secondary></indexterm>
<indexterm><primary>errors.h</primary><secondary>HH_ERRORS</secondary></indexterm>
<para><computeroutput>enum <link linkend="_errors_8h_1a7c84f993e326519edca8fd9efdec746e">HH_ERRORS</link></computeroutput></para><para>

<para><link linkend="_errors_8h">errors.h</link> - a wrapper for all of hh&apos;s potential errors. </para>
</para>

<para>An enum containing all the possible errors hh could throw. </para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>HH_FOPEN_ERROR</primary><secondary>errors.h</secondary></indexterm>
<indexterm><primary>errors.h</primary><secondary>HH_FOPEN_ERROR</secondary></indexterm>
<anchor xml:id="_errors_8h_1a7c84f993e326519edca8fd9efdec746eaa67a554e13599ff5d070f2d0285e147a"/>HH_FOPEN_ERROR</entry><entry></entry></row><row><entry><indexterm><primary>HH_FREAD_ERROR</primary><secondary>errors.h</secondary></indexterm>
<indexterm><primary>errors.h</primary><secondary>HH_FREAD_ERROR</secondary></indexterm>
<anchor xml:id="_errors_8h_1a7c84f993e326519edca8fd9efdec746ea0c1be935ae4f22ab2131ac82f875a6df"/>HH_FREAD_ERROR</entry><entry></entry></row><row><entry><indexterm><primary>HH_PT_RESIZE_ERROR</primary><secondary>errors.h</secondary></indexterm>
<indexterm><primary>errors.h</primary><secondary>HH_PT_RESIZE_ERROR</secondary></indexterm>
<anchor xml:id="_errors_8h_1a7c84f993e326519edca8fd9efdec746ea6e1ae6020f33cd0672404554c59ea5e3"/>HH_PT_RESIZE_ERROR</entry><entry>
<para>Path table resize error. </para>
</entry></row><row><entry><indexterm><primary>HH_MEM_ALLOC_ERROR</primary><secondary>errors.h</secondary></indexterm>
<indexterm><primary>errors.h</primary><secondary>HH_MEM_ALLOC_ERROR</secondary></indexterm>
<anchor xml:id="_errors_8h_1a7c84f993e326519edca8fd9efdec746eafdb159091103067c71a4ed9205ba9a6d"/>HH_MEM_ALLOC_ERROR</entry><entry></entry></row><row><entry><indexterm><primary>HH_CREATE_OUTPUT_DIR_ERROR</primary><secondary>errors.h</secondary></indexterm>
<indexterm><primary>errors.h</primary><secondary>HH_CREATE_OUTPUT_DIR_ERROR</secondary></indexterm>
<anchor xml:id="_errors_8h_1a7c84f993e326519edca8fd9efdec746ea728e5e6c78909b6e19994316188847aa"/>HH_CREATE_OUTPUT_DIR_ERROR</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line <link linkend="_errors_8h_source_1l00022">22</link> of file <link linkend="_errors_8h_source">errors.h</link>.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_errors_8h_1a9b9a6494b96286134308f2da3e179af9"/><section>
    <title>fopen_error()</title>
<indexterm><primary>fopen_error</primary><secondary>errors.h</secondary></indexterm>
<indexterm><primary>errors.h</primary><secondary>fopen_error</secondary></indexterm>
<para><computeroutput>void fopen_error (char * filename)</computeroutput></para><para>

<para>Throws an fopen error. </para>
</para>
<para>
Definition at line <link linkend="_errors_8c_source_1l00028">28</link> of file <link linkend="_errors_8c_source">errors.c</link>.</para>
</section>
<anchor xml:id="_errors_8h_1a2628891f509e5466f8a7c932a72bd2dc"/><section>
    <title>handle_fread_error()</title>
<indexterm><primary>handle_fread_error</primary><secondary>errors.h</secondary></indexterm>
<indexterm><primary>errors.h</primary><secondary>handle_fread_error</secondary></indexterm>
<para><computeroutput><link linkend="_errors_8h_1a7c84f993e326519edca8fd9efdec746e">HH_ERRORS</link> handle_fread_error (size_t actual, size_t expected_bytes)</computeroutput></para><para>

<para>Throws an fread error. </para>
</para>
<para>
Definition at line <link linkend="_errors_8c_source_1l00034">34</link> of file <link linkend="_errors_8c_source">errors.c</link>.</para>
</section>
<anchor xml:id="_errors_8h_1a2343c2fe78d79e1bd2092a5aa19964b0"/><section>
    <title>handle_unknown_command_line_argument_error()</title>
<indexterm><primary>handle_unknown_command_line_argument_error</primary><secondary>errors.h</secondary></indexterm>
<indexterm><primary>errors.h</primary><secondary>handle_unknown_command_line_argument_error</secondary></indexterm>
<para><computeroutput>void handle_unknown_command_line_argument_error (char * arg)</computeroutput></para><para>

<para>Throws an unknown command line argument error. </para>
</para>
<para>
Definition at line <link linkend="_errors_8c_source_1l00042">42</link> of file <link linkend="_errors_8c_source">errors.c</link>.</para>
</section>
<anchor xml:id="_errors_8h_1a1fa621098d550bb126a641aba0638f7f"/><section>
    <title>improper_usage_error()</title>
<indexterm><primary>improper_usage_error</primary><secondary>errors.h</secondary></indexterm>
<indexterm><primary>errors.h</primary><secondary>improper_usage_error</secondary></indexterm>
<para><computeroutput>void improper_usage_error (void )</computeroutput></para><para>

<para>Throws an improper usage error. </para>
</para>
<para>
Definition at line <link linkend="_errors_8c_source_1l00012">12</link> of file <link linkend="_errors_8c_source">errors.c</link>.</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_errors_8h_1ab2272d0da4232afba19f95bf02944157"/><section>
    <title>CALLOC_FAILED_ERR_MSG_FMT</title>
<indexterm><primary>CALLOC_FAILED_ERR_MSG_FMT</primary><secondary>errors.h</secondary></indexterm>
<indexterm><primary>errors.h</primary><secondary>CALLOC_FAILED_ERR_MSG_FMT</secondary></indexterm>
<para><computeroutput>const char* CALLOC_FAILED_ERR_MSG_FMT<computeroutput>[extern]</computeroutput></computeroutput></para><para>

<para>Format string for failed calloc error message. </para>
</para>
<para>
Definition at line <link linkend="_errors_8c_source_1l00006">6</link> of file <link linkend="_errors_8c_source">errors.c</link>.</para>
</section>
<anchor xml:id="_errors_8h_1a03ff53905312bd88e728b1863cf1b1c9"/><section>
    <title>FOPEN_FAILED_ERR_MSG_FMT</title>
<indexterm><primary>FOPEN_FAILED_ERR_MSG_FMT</primary><secondary>errors.h</secondary></indexterm>
<indexterm><primary>errors.h</primary><secondary>FOPEN_FAILED_ERR_MSG_FMT</secondary></indexterm>
<para><computeroutput>const char* FOPEN_FAILED_ERR_MSG_FMT<computeroutput>[extern]</computeroutput></computeroutput></para><para>

<para>Format string for failed fopen error message. </para>
</para>
<para>
Definition at line <link linkend="_errors_8c_source_1l00008">8</link> of file <link linkend="_errors_8c_source">errors.c</link>.</para>
</section>
</section>
</section>
