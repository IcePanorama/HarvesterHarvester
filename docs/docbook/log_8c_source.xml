<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_log_8c_source" xml:lang="en-US">
<title>log.c</title>
<indexterm><primary>src/log.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_log_8c_source_1l00001"/>00001 <emphasis role="comment">//&#32;&#32;Copyright&#32;(C)&#32;2024&#32;&#32;IcePanorama</emphasis>
<anchor xml:id="_log_8c_source_1l00002"/>00002 <emphasis role="comment">//&#32;&#32;This&#32;file&#32;is&#32;a&#32;part&#32;of&#32;HarvesterHarvester.</emphasis>
<anchor xml:id="_log_8c_source_1l00003"/>00003 <emphasis role="comment">//&#32;&#32;HarvesterHarvester&#32;is&#32;free&#32;software:&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify</emphasis>
<anchor xml:id="_log_8c_source_1l00004"/>00004 <emphasis role="comment">//&#32;&#32;it&#32;under&#32;the&#32;terms&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;as&#32;published&#32;by&#32;the</emphasis>
<anchor xml:id="_log_8c_source_1l00005"/>00005 <emphasis role="comment">//&#32;&#32;Free&#32;Software&#32;Foundation,&#32;either&#32;version&#32;3&#32;of&#32;the&#32;License,&#32;or&#32;(at&#32;your</emphasis>
<anchor xml:id="_log_8c_source_1l00006"/>00006 <emphasis role="comment">//&#32;&#32;option)&#32;any&#32;later&#32;version.</emphasis>
<anchor xml:id="_log_8c_source_1l00007"/>00007 <emphasis role="comment">//&#32;&#32;This&#32;program&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,&#32;but&#32;WITHOUT</emphasis>
<anchor xml:id="_log_8c_source_1l00008"/>00008 <emphasis role="comment">//&#32;&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of&#32;MERCHANTABILITY&#32;or</emphasis>
<anchor xml:id="_log_8c_source_1l00009"/>00009 <emphasis role="comment">//&#32;&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;&#32;See&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;for</emphasis>
<anchor xml:id="_log_8c_source_1l00010"/>00010 <emphasis role="comment">//&#32;&#32;more&#32;details.</emphasis>
<anchor xml:id="_log_8c_source_1l00011"/>00011 <emphasis role="comment">//</emphasis>
<anchor xml:id="_log_8c_source_1l00012"/>00012 <emphasis role="comment">//&#32;&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;General&#32;Public&#32;License&#32;along</emphasis>
<anchor xml:id="_log_8c_source_1l00013"/>00013 <emphasis role="comment">//&#32;&#32;with&#32;this&#32;program.&#32;&#32;If&#32;not,&#32;see&#32;&lt;https://www.gnu.org/licenses/&gt;.</emphasis>
<anchor xml:id="_log_8c_source_1l00014"/>00014 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_log_8h">log.h</link>&quot;</emphasis>
<anchor xml:id="_log_8c_source_1l00015"/>00015 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_errors_8h">errors.h</link>&quot;</emphasis>
<anchor xml:id="_log_8c_source_1l00016"/>00016 
<anchor xml:id="_log_8c_source_1l00025"/>00025 <emphasis role="keywordtype">void</emphasis>
<anchor xml:id="_log_8c_source_1l00026"/><link linkend="_log_8c_1aaaf9265dd175725985b56eeac3db2f30">00026</link> <link linkend="_log_8c_1aaaf9265dd175725985b56eeac3db2f30">print_hex_data</link>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*buffer,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;BUFFER_LEN)
<anchor xml:id="_log_8c_source_1l00027"/>00027 {
<anchor xml:id="_log_8c_source_1l00028"/>00028 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(uint8_t&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;BUFFER_LEN;&#32;i++)
<anchor xml:id="_log_8c_source_1l00029"/>00029 &#32;&#32;&#32;&#32;{
<anchor xml:id="_log_8c_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;&#32;%02x&quot;</emphasis>,&#32;buffer[i]);
<anchor xml:id="_log_8c_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((i&#32;!=&#32;0)&#32;&amp;&amp;&#32;(i&#32;%&#32;4&#32;==&#32;3))
<anchor xml:id="_log_8c_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_log_8c_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf&#32;(<emphasis role="stringliteral">&quot;\t&quot;</emphasis>);
<anchor xml:id="_log_8c_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_log_8c_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((i&#32;!=&#32;0)&#32;&amp;&amp;&#32;(i&#32;%&#32;16&#32;==&#32;15))
<anchor xml:id="_log_8c_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_log_8c_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;puts&#32;(<emphasis role="stringliteral">&quot;&quot;</emphasis>);
<anchor xml:id="_log_8c_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_log_8c_source_1l00039"/>00039 &#32;&#32;&#32;&#32;}
<anchor xml:id="_log_8c_source_1l00040"/>00040 &#32;&#32;puts&#32;(<emphasis role="stringliteral">&quot;&quot;</emphasis>);
<anchor xml:id="_log_8c_source_1l00041"/>00041 }
<anchor xml:id="_log_8c_source_1l00042"/>00042 
<anchor xml:id="_log_8c_source_1l00043"/><link linkend="_log_8c_1a41e9ced92689f94ffc427d5e2e658382">00043</link> <emphasis role="preprocessor">#define&#32;BYTES_TO_READ&#32;32</emphasis>
<anchor xml:id="_log_8c_source_1l00049"/>00049 <emphasis role="keywordtype">void</emphasis>
<anchor xml:id="_log_8c_source_1l00050"/><link linkend="_log_8c_1af9859f7b27d46f040c836ecfdc1ac304">00050</link> <link linkend="_log_8c_1af9859f7b27d46f040c836ecfdc1ac304">print_some_data_from_file</link>&#32;(FILE&#32;*fptr)
<anchor xml:id="_log_8c_source_1l00051"/>00051 {
<anchor xml:id="_log_8c_source_1l00052"/>00052 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;buffer[<link linkend="_log_8c_1a41e9ced92689f94ffc427d5e2e658382">BYTES_TO_READ</link>];
<anchor xml:id="_log_8c_source_1l00053"/>00053 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bytes_read&#32;=&#32;fread&#32;(buffer,&#32;<emphasis role="keyword">sizeof</emphasis>&#32;(buffer[0]),&#32;<link linkend="_log_8c_1a41e9ced92689f94ffc427d5e2e658382">BYTES_TO_READ</link>,&#32;fptr);
<anchor xml:id="_log_8c_source_1l00054"/>00054 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytes_read&#32;!=&#32;<link linkend="_log_8c_1a41e9ced92689f94ffc427d5e2e658382">BYTES_TO_READ</link>)
<anchor xml:id="_log_8c_source_1l00055"/>00055 &#32;&#32;&#32;&#32;{
<anchor xml:id="_log_8c_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_errors_8c_1a2628891f509e5466f8a7c932a72bd2dc">handle_fread_error</link>&#32;(bytes_read,&#32;<link linkend="_log_8c_1a41e9ced92689f94ffc427d5e2e658382">BYTES_TO_READ</link>);
<anchor xml:id="_log_8c_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_log_8c_source_1l00058"/>00058 &#32;&#32;&#32;&#32;}
<anchor xml:id="_log_8c_source_1l00059"/>00059 
<anchor xml:id="_log_8c_source_1l00060"/>00060 &#32;&#32;<link linkend="_log_8c_1aaaf9265dd175725985b56eeac3db2f30">print_hex_data</link>&#32;(buffer,&#32;<link linkend="_log_8c_1a41e9ced92689f94ffc427d5e2e658382">BYTES_TO_READ</link>);
<anchor xml:id="_log_8c_source_1l00061"/>00061 &#32;&#32;fseek&#32;(fptr,&#32;-<link linkend="_log_8c_1a41e9ced92689f94ffc427d5e2e658382">BYTES_TO_READ</link>,&#32;SEEK_CUR);
<anchor xml:id="_log_8c_source_1l00062"/>00062 }
</programlisting></section>
