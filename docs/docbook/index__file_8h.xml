<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_index__file_8h" xml:lang="en-US">
<title>src/index_file.h File Reference</title>
<indexterm><primary>src/index_file.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;stdint.h&gt;<?linebreak?>#include &lt;stdio.h&gt;<?linebreak?></programlisting><simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structindex__entry">index_entry</link></para>

<para>An entry of the associated <computeroutput><link linkend="_structindex__file">index_file</link></computeroutput>. </para>
</listitem>
            <listitem><para>struct <link linkend="_structindex__file">index_file</link></para>

<para>Contains all the indicies within an <computeroutput>INDEX.00#</computeroutput> file. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_index__file_8h_1a1f72d7c1f8f994a1873de2f0405f66bf">FULL_PATH_MAX_LEN</link>&#160;&#160;&#160;128</para>

<para><link linkend="_index__file_8h">index_file.h</link> - <link linkend="_structindex__file">index_file</link> datatype and its associated functions. </para>
</listitem>
            <listitem><para>#define <link linkend="_index__file_8h_1a733cac5291dfeb37c70016d83efed505">FILENAME_MAX_LEN</link>&#160;&#160;&#160;32</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int8_t <link linkend="_index__file_8h_1a8d0c5734d83636faa168e5869954b500">create_index_file</link> (<link linkend="_structindex__file">index_file</link> *i)</para>

<para>Initializes an <computeroutput><link linkend="_structindex__file">index_file</link></computeroutput>. </para>
</listitem>
            <listitem><para>int8_t <link linkend="_index__file_8h_1a642840a928d9784ac4cf34228672fbbc">destroy_index_file</link> (<link linkend="_structindex__file">index_file</link> *i)</para>

<para>Destroys a given <computeroutput><link linkend="_structindex__file">index_file</link></computeroutput>. </para>
</listitem>
            <listitem><para>int8_t <link linkend="_index__file_8h_1a8d9a7c6f483fa764254a2013aa7258b1">process_index_file</link> (FILE *fptr, <link linkend="_structindex__file">index_file</link> *idxf)</para>

<para>Reads data from a given file, creating <computeroutput><link linkend="_structindex__entry">index_entry</link></computeroutput>s for every entry in said file. </para>
</listitem>
            <listitem><para>void <link linkend="_index__file_8h_1a803c3e3f6d663ff2050f3c2e60e13431">print_index_entry</link> (<link linkend="_structindex__entry">index_entry</link> *idxe)</para>

<para>Prints all the attributes of a given <computeroutput><link linkend="_structindex__entry">index_entry</link></computeroutput> in a human-readable form. </para>
</listitem>
            <listitem><para>int8_t <link linkend="_index__file_8h_1a746462bc35bd98ad993e5da86bd6b2a7">add_entry_to_index_file</link> (<link linkend="_structindex__file">index_file</link> *file, <link linkend="_structindex__entry">index_entry</link> *entry)</para>

<para>Adds a given <computeroutput><link linkend="_structindex__entry">index_entry</link></computeroutput> to a <computeroutput><link linkend="_structindex__file">index_file</link></computeroutput>. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_index__file_8h_1a733cac5291dfeb37c70016d83efed505"/><section>
    <title>FILENAME_MAX_LEN</title>
<indexterm><primary>FILENAME_MAX_LEN</primary><secondary>index_file.h</secondary></indexterm>
<indexterm><primary>index_file.h</primary><secondary>FILENAME_MAX_LEN</secondary></indexterm>
<para><computeroutput>#define FILENAME_MAX_LEN&#160;&#160;&#160;32</computeroutput></para><para>
Definition at line <link linkend="_index__file_8h_source_1l00040">40</link> of file <link linkend="_index__file_8h_source">index_file.h</link>.</para>
</section>
<anchor xml:id="_index__file_8h_1a1f72d7c1f8f994a1873de2f0405f66bf"/><section>
    <title>FULL_PATH_MAX_LEN</title>
<indexterm><primary>FULL_PATH_MAX_LEN</primary><secondary>index_file.h</secondary></indexterm>
<indexterm><primary>index_file.h</primary><secondary>FULL_PATH_MAX_LEN</secondary></indexterm>
<para><computeroutput>#define FULL_PATH_MAX_LEN&#160;&#160;&#160;128</computeroutput></para><para>

<para><link linkend="_index__file_8h">index_file.h</link> - <link linkend="_structindex__file">index_file</link> datatype and its associated functions. </para>
</para>

<para>Used for processing Harvester&apos;s <computeroutput>INDEX.00#</computeroutput> files. </para>

<para>Both the <link linkend="_structindex__file">index_file</link> datatype and the functions contained herein are based on my own observations from studying the <computeroutput>INDEX.00#</computeroutput> files and their associated <computeroutput>.DAT</computeroutput> files in a hexeditor. </para>

<para>Through these observations alone, I believe we have enough data to successfully extract files, however, it&apos;s worth noting that there is a fair bit of data that we&apos;re ignoring here. </para>

<para>Between the <computeroutput>filename</computeroutput> and <computeroutput>file_start</computeroutput>, there&apos;s occasionally some data, but I can&apos;t for the life of me seem to figure out what it&apos;s used for. It could be random garbage generated by whatever program created these <computeroutput>.DAT</computeroutput>/<computeroutput>INDEX.00#</computeroutput> files, or they could be file flags, or perhaps even some sort of primative checksum; I&apos;m not sure. </para>

<para>If you have any idea what this data might be used for, feel free to make whatever changes are needed! Both of these are probably too large, but better to be safe than sorry. </para>
<para>
Definition at line <link linkend="_index__file_8h_source_1l00039">39</link> of file <link linkend="_index__file_8h_source">index_file.h</link>.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_index__file_8h_1a746462bc35bd98ad993e5da86bd6b2a7"/><section>
    <title>add_entry_to_index_file()</title>
<indexterm><primary>add_entry_to_index_file</primary><secondary>index_file.h</secondary></indexterm>
<indexterm><primary>index_file.h</primary><secondary>add_entry_to_index_file</secondary></indexterm>
<para><computeroutput>int8_t add_entry_to_index_file (<link linkend="_structindex__file">index_file</link> * file, <link linkend="_structindex__entry">index_entry</link> * entry)</computeroutput></para><para>

<para>Adds a given <computeroutput><link linkend="_structindex__entry">index_entry</link></computeroutput> to a <computeroutput><link linkend="_structindex__file">index_file</link></computeroutput>. </para>
</para>
<para>
Definition at line <link linkend="_index__file_8c_source_1l00139">139</link> of file <link linkend="_index__file_8c_source">index_file.c</link>.</para>
</section>
<anchor xml:id="_index__file_8h_1a8d0c5734d83636faa168e5869954b500"/><section>
    <title>create_index_file()</title>
<indexterm><primary>create_index_file</primary><secondary>index_file.h</secondary></indexterm>
<indexterm><primary>index_file.h</primary><secondary>create_index_file</secondary></indexterm>
<para><computeroutput>int8_t create_index_file (<link linkend="_structindex__file">index_file</link> * i)</computeroutput></para><para>

<para>Initializes an <computeroutput><link linkend="_structindex__file">index_file</link></computeroutput>. </para>
</para>
<para>
Definition at line <link linkend="_index__file_8c_source_1l00033">33</link> of file <link linkend="_index__file_8c_source">index_file.c</link>.</para>
</section>
<anchor xml:id="_index__file_8h_1a642840a928d9784ac4cf34228672fbbc"/><section>
    <title>destroy_index_file()</title>
<indexterm><primary>destroy_index_file</primary><secondary>index_file.h</secondary></indexterm>
<indexterm><primary>index_file.h</primary><secondary>destroy_index_file</secondary></indexterm>
<para><computeroutput>int8_t destroy_index_file (<link linkend="_structindex__file">index_file</link> * i)</computeroutput></para><para>

<para>Destroys a given <computeroutput><link linkend="_structindex__file">index_file</link></computeroutput>. </para>
</para>
<para>
Definition at line <link linkend="_index__file_8c_source_1l00050">50</link> of file <link linkend="_index__file_8c_source">index_file.c</link>.</para>
</section>
<anchor xml:id="_index__file_8h_1a803c3e3f6d663ff2050f3c2e60e13431"/><section>
    <title>print_index_entry()</title>
<indexterm><primary>print_index_entry</primary><secondary>index_file.h</secondary></indexterm>
<indexterm><primary>index_file.h</primary><secondary>print_index_entry</secondary></indexterm>
<para><computeroutput>void print_index_entry (<link linkend="_structindex__entry">index_entry</link> * idxe)</computeroutput></para><para>

<para>Prints all the attributes of a given <computeroutput><link linkend="_structindex__entry">index_entry</link></computeroutput> in a human-readable form. </para>
</para>
<para>
Definition at line <link linkend="_index__file_8c_source_1l00129">129</link> of file <link linkend="_index__file_8c_source">index_file.c</link>.</para>
</section>
<anchor xml:id="_index__file_8h_1a8d9a7c6f483fa764254a2013aa7258b1"/><section>
    <title>process_index_file()</title>
<indexterm><primary>process_index_file</primary><secondary>index_file.h</secondary></indexterm>
<indexterm><primary>index_file.h</primary><secondary>process_index_file</secondary></indexterm>
<para><computeroutput>int8_t process_index_file (FILE * fptr, <link linkend="_structindex__file">index_file</link> * idxf)</computeroutput></para><para>

<para>Reads data from a given file, creating <computeroutput><link linkend="_structindex__entry">index_entry</link></computeroutput>s for every entry in said file. </para>
</para>

<para>Every entry is 0x94 bytes apart, the part we&apos;re most concerned about is the last 16 bytes. Currently treating unknown data in between as junk. If you have any idea what this data might be used for, please feel free to make changes.</para>
<para>
Definition at line <link linkend="_index__file_8c_source_1l00057">57</link> of file <link linkend="_index__file_8c_source">index_file.c</link>.</para>
</section>
</section>
</section>
