"""
    verify_chksums.py
    Compares two files generated by `batch_md5.sh`.
"""
import sys


def init_chksum_dict(path: str) -> {str: str}:
    """
        Creates dictionary from checksum file located at `path`, where each key
        is the file path and each value is its md5 checksum value. For the time
        being, at least, the type of both of these is `str`, although there may
        be some better data type for the checksum itself.
        param:  path    path to some checksum file.
        return: checksum dictionary.
    """
    out = {}
    with open(path) as fptr:
        for line in fptr:
            if not line:
                continue

            segments = line.split(" ")
            if (len(segments) < 2):
                raise RuntimeError(f"Bad input: {line}")
            if (segments[2] in out):
                raise RuntimeError(f"Duplicate key in {path}:"
                                   + f"{segments[2]} => {out[segments[2]]}")

            out[segments[2]] = segments[0]
    return out


if __name__ == "__main__":
    if len(sys.argv) < 3:
        raise ValueError("Invalid usage error. Try: " +
                         f"`{sys.argv[0]} path_to_original.txt path_to_alt.txt`")

    original = init_chksum_dict(sys.argv[1])
    alt = init_chksum_dict(sys.argv[2])

    print("Verifying checksums")
    for file in alt.keys():
        assert (file in original)
        assert (original[file] == alt[file])

    print("All checksums match... exiting.")
