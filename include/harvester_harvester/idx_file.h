/**
 *  Both the index_file datatype and the functions contained herein are based
 * on my own observations from studying the `INDEX.00#` files and their
 * associated `.DAT` files in a hexeditor.
 *
 * Through these observations alone, I believe we have enough data to
 * successfully extract files, however, it's worth noting that there is a fair
 * bit of data that we're ignoring here. Between the `filename` and `start`,
 * there's occasionally some data, but I can't for the life of me seem to
 * figure out what it's used for. It could be random garbage generated by
 * whatever program created these `.DAT`/`INDEX.00#` files, or they could be
 * file flags, or perhaps even some sort of primative checksum; I'm not sure.
 *
 * If you have any idea what this data might be used for, feel free to open an
 * issue/pull request modifying this project as needed!
 */
#ifndef _HARVESTER_HARVESTER_INDEX_FILE_H_
#define _HARVESTER_HARVESTER_INDEX_FILE_H_

typedef struct _IndexFile_s _IndexFile_t;

_IndexFile_t *_idx_alloc (void);
void _idx_free (_IndexFile_t *i);

int _idx_init (_IndexFile_t *i, const char path[static 1]);
void _idx_print (_IndexFile_t *i);
// FIXME: Should dat path be handled internally?
int _idx_extract (_IndexFile_t *i, const char *dat_path);

#endif /* _HARVESTER_HARVESTER_INDEX_FILE_H_ */
